{
    "node_url": "http://localhost:3030",
    "armin_token": {
        "program": "program armin_token.aleo;\n\nrecord ArminToken:\n    owner as address.private;\n    amount as u64.private;\n\nmapping supply_armin:\n    key left as u8.public;\n    value right as u64.public;\n\nmapping programs_armin:\n    key left as field.public;\n    value right as u64.public;\n\nfunction mint_armin:\n    input r0 as address.private;\n    input r1 as u64.private;\n    lte r1 100000u64 into r2;\n    assert.eq r2 true ;\n    cast r0 r1 into r3 as ArminToken.record;\n    output r3 as ArminToken.record;\n   finalize r1;\n\nfinalize mint_armin:\n    input r0 as u64.public;\n    get.or_use supply_armin[0u8] 0u64 into r1;\n    add r1 r0 into r2;\n    lte r2 100000000000u64 into r3;\n    assert.eq r3 true ;\n    set r2 into supply_armin[0u8];\n\nfunction transfer_armin:\n    input r0 as ArminToken.record;\n    input r1 as address.private;\n    input r2 as u64.private;\n    sub r0.amount r2 into r3;\n    cast r0.owner r3 into r4 as ArminToken.record;\n    cast r1 r2 into r5 as ArminToken.record;\n    output r4 as ArminToken.record;\n    output r5 as ArminToken.record;\n\nfunction transfer_armin_to_program:\n    input r0 as ArminToken.record;\n    input r1 as u64.private;\n    sub r0.amount r1 into r2;\n    cast r0.owner r2 into r3 as ArminToken.record;\n    output r3 as ArminToken.record;\n   finalize r1;\n\nfinalize transfer_armin_to_program:\n    input r0 as u64.public;\n    hash.bhp256 0u8 into r1 as field;\n    get.or_use programs_armin[r1] 0u64 into r2;\n    add r2 r0 into r3;\n    set r3 into programs_armin[r1];\n\nfunction transfer_armin_from_program:\n    input r0 as address.private;\n    input r1 as u64.private;\n    cast r0 r1 into r2 as ArminToken.record;\n    output r2 as ArminToken.record;\n   finalize r1;\n\nfinalize transfer_armin_from_program:\n    input r0 as u64.public;\n    hash.bhp256 0u8 into r1 as field;\n    get.or_use programs_armin[r1] 0u64 into r2;\n    sub r2 r0 into r3;\n    set r3 into programs_armin[r1];\n",
        "mint_function": "mint_armin",
        "mint_fee": 2.0
    },
    "armout_token": {
        "program": "program armout_token.aleo;\n\nrecord ArmoutToken:\n    owner as address.private;\n    amount as u64.private;\n\nmapping supply_armout:\n    key left as u8.public;\n    value right as u64.public;\n\nmapping programs_armout:\n    key left as field.public;\n    value right as u64.public;\n\nfunction mint_armout:\n    input r0 as address.private;\n    input r1 as u64.private;\n    lte r1 100000u64 into r2;\n    assert.eq r2 true ;\n    cast r0 r1 into r3 as ArmoutToken.record;\n    output r3 as ArmoutToken.record;\n   finalize r1;\n\nfinalize mint_armout:\n    input r0 as u64.public;\n    get.or_use supply_armout[0u8] 0u64 into r1;\n    add r1 r0 into r2;\n    lte r2 100000000000u64 into r3;\n    assert.eq r3 true ;\n    set r2 into supply_armout[0u8];\n\nfunction transfer_armout:\n    input r0 as ArmoutToken.record;\n    input r1 as address.private;\n    input r2 as u64.private;\n    sub r0.amount r2 into r3;\n    cast r0.owner r3 into r4 as ArmoutToken.record;\n    cast r1 r2 into r5 as ArmoutToken.record;\n    output r4 as ArmoutToken.record;\n    output r5 as ArmoutToken.record;\n\nfunction transfer_armout_to_program:\n    input r0 as ArmoutToken.record;\n    input r1 as u64.private;\n    sub r0.amount r1 into r2;\n    cast r0.owner r2 into r3 as ArmoutToken.record;\n    output r3 as ArmoutToken.record;\n   finalize r1;\n\nfinalize transfer_armout_to_program:\n    input r0 as u64.public;\n    hash.bhp256 0u8 into r1 as field;\n    get.or_use programs_armout[r1] 0u64 into r2;\n    add r2 r0 into r3;\n    set r3 into programs_armout[r1];\n\nfunction transfer_armout_from_program:\n    input r0 as address.private;\n    input r1 as u64.private;\n    cast r0 r1 into r2 as ArmoutToken.record;\n    output r2 as ArmoutToken.record;\n   finalize r1;\n\nfinalize transfer_armout_from_program:\n    input r0 as u64.public;\n    hash.bhp256 0u8 into r1 as field;\n    get.or_use programs_armout[r1] 0u64 into r2;\n    sub r2 r0 into r3;\n    set r3 into programs_armout[r1];\n",
        "mint_function": "mint_armout",
        "mint_fee": 2.0
    },
    "shadow_swap":{
        "program": "import armin_token.aleo;\nimport armout_token.aleo;\n\nprogram shadow_swap_test1.aleo;\n\nmapping reserves_shadow:\n    key left as u8.public;\n    value right as u64.public;\n\nmapping supply_shadow:\n    key left as u8.public;\n    value right as u64.public;\n\nmapping lp_tokens_shadow:\n    key left as field.public;\n    value right as u64.public;\n\nclosure square_root:\n    input r0 as u64;\n    add r0 1u64 into r1;\n    div r1 2u64 into r2;\n    gte r2 r0 into r3;\n    div r0 r2 into r4;\n    add r4 r2 into r5;\n    div r5 2u64 into r6;\n    gte r6 r2 into r7;\n    div r0 r6 into r8;\n    add r8 r6 into r9;\n    div r9 2u64 into r10;\n    gte r10 r6 into r11;\n    div r0 r10 into r12;\n    add r12 r10 into r13;\n    div r13 2u64 into r14;\n    gte r14 r10 into r15;\n    div r0 r14 into r16;\n    add r16 r14 into r17;\n    div r17 2u64 into r18;\n    gte r18 r14 into r19;\n    div r0 r18 into r20;\n    add r20 r18 into r21;\n    div r21 2u64 into r22;\n    gte r22 r18 into r23;\n    div r0 r22 into r24;\n    add r24 r22 into r25;\n    div r25 2u64 into r26;\n    gte r26 r22 into r27;\n    div r0 r26 into r28;\n    add r28 r26 into r29;\n    div r29 2u64 into r30;\n    gte r30 r26 into r31;\n    div r0 r30 into r32;\n    add r32 r30 into r33;\n    div r33 2u64 into r34;\n    gte r34 r30 into r35;\n    div r0 r34 into r36;\n    add r36 r34 into r37;\n    div r37 2u64 into r38;\n    gte r38 r34 into r39;\n    div r0 r38 into r40;\n    add r40 r38 into r41;\n    div r41 2u64 into r42;\n    gte r42 r38 into r43;\n    div r0 r42 into r44;\n    add r44 r42 into r45;\n    div r45 2u64 into r46;\n    gte r46 r42 into r47;\n    div r0 r46 into r48;\n    add r48 r46 into r49;\n    div r49 2u64 into r50;\n    gte r50 r46 into r51;\n    div r0 r50 into r52;\n    add r52 r50 into r53;\n    div r53 2u64 into r54;\n    gte r54 r50 into r55;\n    div r0 r54 into r56;\n    add r56 r54 into r57;\n    div r57 2u64 into r58;\n    gte r58 r54 into r59;\n    div r0 r58 into r60;\n    add r60 r58 into r61;\n    div r61 2u64 into r62;\n    gte r62 r58 into r63;\n    div r0 r62 into r64;\n    add r64 r62 into r65;\n    div r65 2u64 into r66;\n    gte r66 r62 into r67;\n    div r0 r66 into r68;\n    add r68 r66 into r69;\n    div r69 2u64 into r70;\n    gte r70 r66 into r71;\n    div r0 r70 into r72;\n    add r72 r70 into r73;\n    div r73 2u64 into r74;\n    gte r74 r70 into r75;\n    div r0 r74 into r76;\n    add r76 r74 into r77;\n    div r77 2u64 into r78;\n    gte r78 r74 into r79;\n    div r0 r78 into r80;\n    add r80 r78 into r81;\n    div r81 2u64 into r82;\n    gte r82 r78 into r83;\n    div r0 r82 into r84;\n    add r84 r82 into r85;\n    div r85 2u64 into r86;\n    gte r86 r82 into r87;\n    div r0 r86 into r88;\n    add r88 r86 into r89;\n    div r89 2u64 into r90;\n    gte r90 r86 into r91;\n    div r0 r90 into r92;\n    add r92 r90 into r93;\n    div r93 2u64 into r94;\n    gte r94 r90 into r95;\n    div r0 r94 into r96;\n    add r96 r94 into r97;\n    div r97 2u64 into r98;\n    gte r98 r94 into r99;\n    div r0 r98 into r100;\n    add r100 r98 into r101;\n    div r101 2u64 into r102;\n    gte r102 r98 into r103;\n    div r0 r102 into r104;\n    add r104 r102 into r105;\n    div r105 2u64 into r106;\n    gte r106 r102 into r107;\n    div r0 r106 into r108;\n    add r108 r106 into r109;\n    div r109 2u64 into r110;\n    gte r110 r106 into r111;\n    div r0 r110 into r112;\n    add r112 r110 into r113;\n    div r113 2u64 into r114;\n    gte r114 r110 into r115;\n    div r0 r114 into r116;\n    add r116 r114 into r117;\n    div r117 2u64 into r118;\n    gte r118 r114 into r119;\n    div r0 r118 into r120;\n    add r120 r118 into r121;\n    div r121 2u64 into r122;\n    gte r122 r118 into r123;\n    div r0 r122 into r124;\n    add r124 r122 into r125;\n    div r125 2u64 into r126;\n    gte r126 r122 into r127;\n    div r0 r126 into r128;\n    add r128 r126 into r129;\n    div r129 2u64 into r130;\n    gte r130 r126 into r131;\n    div r0 r130 into r132;\n    add r132 r130 into r133;\n    div r133 2u64 into r134;\n    gte r134 r130 into r135;\n    div r0 r134 into r136;\n    add r136 r134 into r137;\n    div r137 2u64 into r138;\n    gte r138 r134 into r139;\n    div r0 r138 into r140;\n    add r140 r138 into r141;\n    div r141 2u64 into r142;\n    gte r142 r138 into r143;\n    div r0 r142 into r144;\n    add r144 r142 into r145;\n    div r145 2u64 into r146;\n    gte r146 r142 into r147;\n    div r0 r146 into r148;\n    add r148 r146 into r149;\n    div r149 2u64 into r150;\n    gte r150 r146 into r151;\n    div r0 r150 into r152;\n    add r152 r150 into r153;\n    div r153 2u64 into r154;\n    gte r154 r150 into r155;\n    div r0 r154 into r156;\n    add r156 r154 into r157;\n    div r157 2u64 into r158;\n    gte r158 r154 into r159;\n    div r0 r158 into r160;\n    add r160 r158 into r161;\n    div r161 2u64 into r162;\n    gte r162 r158 into r163;\n    div r0 r162 into r164;\n    add r164 r162 into r165;\n    div r165 2u64 into r166;\n    gte r166 r162 into r167;\n    div r0 r166 into r168;\n    add r168 r166 into r169;\n    div r169 2u64 into r170;\n    ternary r167 r162 0u64 into r171;\n    ternary r163 r158 r171 into r172;\n    ternary r159 r154 r172 into r173;\n    ternary r155 r150 r173 into r174;\n    ternary r151 r146 r174 into r175;\n    ternary r147 r142 r175 into r176;\n    ternary r143 r138 r176 into r177;\n    ternary r139 r134 r177 into r178;\n    ternary r135 r130 r178 into r179;\n    ternary r131 r126 r179 into r180;\n    ternary r127 r122 r180 into r181;\n    ternary r123 r118 r181 into r182;\n    ternary r119 r114 r182 into r183;\n    ternary r115 r110 r183 into r184;\n    ternary r111 r106 r184 into r185;\n    ternary r107 r102 r185 into r186;\n    ternary r103 r98 r186 into r187;\n    ternary r99 r94 r187 into r188;\n    ternary r95 r90 r188 into r189;\n    ternary r91 r86 r189 into r190;\n    ternary r87 r82 r190 into r191;\n    ternary r83 r78 r191 into r192;\n    ternary r79 r74 r192 into r193;\n    ternary r75 r70 r193 into r194;\n    ternary r71 r66 r194 into r195;\n    ternary r67 r62 r195 into r196;\n    ternary r63 r58 r196 into r197;\n    ternary r59 r54 r197 into r198;\n    ternary r55 r50 r198 into r199;\n    ternary r51 r46 r199 into r200;\n    ternary r47 r42 r200 into r201;\n    ternary r43 r38 r201 into r202;\n    ternary r39 r34 r202 into r203;\n    ternary r35 r30 r203 into r204;\n    ternary r31 r26 r204 into r205;\n    ternary r27 r22 r205 into r206;\n    ternary r23 r18 r206 into r207;\n    ternary r19 r14 r207 into r208;\n    ternary r15 r10 r208 into r209;\n    ternary r11 r6 r209 into r210;\n    ternary r7 r2 r210 into r211;\n    ternary r3 r0 r211 into r212;\n    output r212 as u64;\n\nfunction mint_lp_init_shadow:\n    input r0 as address.private;\n    input r1 as armin_token.aleo/ArminToken.record;\n    input r2 as u64.private;\n    input r3 as armout_token.aleo/ArmoutToken.record;\n    input r4 as u64.private;\n    call armin_token.aleo/transfer_armin_to_program r1 r2 into r5;\n    call armout_token.aleo/transfer_armout_to_program r3 r4 into r6;\n    mul r2 r4 into r7;\n    call square_root r7 into r8;\n    sub r8 1000u64 into r9;\n    hash.bhp256 r0 into r10 as field;\n    output r5 as armin_token.aleo/ArminToken.record;\n    output r6 as armout_token.aleo/ArmoutToken.record;\n   finalize r10 r2 r4 r9;\n\nfinalize mint_lp_init_shadow:\n    input r0 as field.public;\n    input r1 as u64.public;\n    input r2 as u64.public;\n    input r3 as u64.public;\n    get.or_use supply_shadow[0u8] 0u64 into r4;\n    assert.eq r4 0u64 ;\n    set r1 into reserves_shadow[0u8];\n    set r2 into reserves_shadow[1u8];\n    set r3 into supply_shadow[0u8];\n    set r3 into lp_tokens_shadow[r0];\n\nfunction mint_lp_shadow:\n    input r0 as address.private;\n    input r1 as armin_token.aleo/ArminToken.record;\n    input r2 as u64.private;\n    input r3 as armout_token.aleo/ArmoutToken.record;\n    input r4 as u64.private;\n    call armin_token.aleo/transfer_armin_to_program r1 r2 into r5;\n    call armout_token.aleo/transfer_armout_to_program r3 r4 into r6;\n    hash.bhp256 r0 into r7 as field;\n    output r5 as armin_token.aleo/ArminToken.record;\n    output r6 as armout_token.aleo/ArmoutToken.record;\n   finalize r7 r2 r4;\n\nfinalize mint_lp_shadow:\n    input r0 as field.public;\n    input r1 as u64.public;\n    input r2 as u64.public;\n    get supply_shadow[0u8] into r3;\n    assert.neq r3 0u64 ;\n    get reserves_shadow[0u8] into r4;\n    get reserves_shadow[1u8] into r5;\n    mul r1 r3 into r6;\n    div r6 r4 into r7;\n    mul r2 r3 into r8;\n    div r8 r5 into r9;\n    lt r7 r9 into r10;\n    ternary r10 r7 r9 into r11;\n    add r4 r1 into r12;\n    set r12 into reserves_shadow[0u8];\n    add r5 r2 into r13;\n    set r13 into reserves_shadow[1u8];\n    add r3 r11 into r14;\n    set r14 into supply_shadow[0u8];\n    get.or_use lp_tokens_shadow[r0] 0u64 into r15;\n    add r15 r11 into r16;\n    set r16 into lp_tokens_shadow[r0];\n\nfunction burn_lp_shadow:\n    input r0 as address.private;\n    input r1 as u64.private;\n    input r2 as u64.private;\n    assert.neq r1 0u64 ;\n    assert.neq r2 0u64 ;\n    call armin_token.aleo/transfer_armin_from_program r0 r1 into r3;\n    call armout_token.aleo/transfer_armout_from_program r0 r2 into r4;\n    hash.bhp256 r0 into r5 as field;\n   finalize r5 r1 r2;\n\nfinalize burn_lp_shadow:\n    input r0 as field.public;\n    input r1 as u64.public;\n    input r2 as u64.public;\n    get supply_shadow[0u8] into r3;\n    assert.neq r3 0u64 ;\n    get lp_tokens_shadow[r0] into r4;\n    assert.neq r4 0u64 ;\n    get reserves_shadow[0u8] into r5;\n    get reserves_shadow[1u8] into r6;\n    mul r4 r4 into r7;\n    div r7 r3 into r8;\n    div r5 r1 into r9;\n    mul r9 r8 into r10;\n    div r6 r2 into r11;\n    mul r11 r8 into r12;\n    assert.eq r10 r12 ;\n    sub r5 r1 into r13;\n    set r13 into reserves_shadow[0u8];\n    sub r6 r2 into r14;\n    set r14 into reserves_shadow[1u8];\n    sub r3 r4 into r15;\n    set r15 into supply_shadow[0u8];\n    set 0u64 into lp_tokens_shadow[r0];\n\nfunction swap_to_0_shadow:\n    input r0 as address.private;\n    input r1 as armout_token.aleo/ArmoutToken.record;\n    input r2 as u64.private;\n    input r3 as u64.private;\n    assert.neq r3 0u64 ;\n    assert.neq r2 0u64 ;\n    call armin_token.aleo/transfer_armin_from_program r0 r3 into r4;\n    call armout_token.aleo/transfer_armout_to_program r1 r2 into r5;\n    output r4 as armin_token.aleo/ArminToken.record;\n    output r5 as armout_token.aleo/ArmoutToken.record;\n   finalize r2 r3;\n\nfinalize swap_to_0_shadow:\n    input r0 as u64.public;\n    input r1 as u64.public;\n    get reserves_shadow[0u8] into r2;\n    get reserves_shadow[1u8] into r3;\n    sub r2 r1 into r4;\n    add r3 r0 into r5;\n    mul r4 r5 into r6;\n    mul r2 r3 into r7;\n    gte r6 r7 into r8;\n    assert.eq r8 true ;\n    set r4 into reserves_shadow[0u8];\n    set r5 into reserves_shadow[1u8];\n\nfunction swap_to_1_shadow:\n    input r0 as address.private;\n    input r1 as armin_token.aleo/ArminToken.record;\n    input r2 as u64.private;\n    input r3 as u64.private;\n    assert.neq r2 0u64 ;\n    assert.neq r3 0u64 ;\n    call armin_token.aleo/transfer_armin_to_program r1 r2 into r4;\n    call armout_token.aleo/transfer_armout_from_program r0 r3 into r5;\n    output r4 as armin_token.aleo/ArminToken.record;\n    output r5 as armout_token.aleo/ArmoutToken.record;\n   finalize r2 r3;\n\nfinalize swap_to_1_shadow:\n    input r0 as u64.public;\n    input r1 as u64.public;\n    get reserves_shadow[0u8] into r2;\n    get reserves_shadow[1u8] into r3;\n    add r2 r0 into r4;\n    sub r3 r1 into r5;\n    mul r4 r5 into r6;\n    mul r2 r3 into r7;\n    gte r6 r7 into r8;\n    assert.eq r8 true ;\n    set r4 into reserves_shadow[0u8];\n    set r5 into reserves_shadow[1u8];\n",
        "swap_to_0_function": "swap_to_0_shadow",
        "swap_to_0_fee": 5.0,
        "swap_to_1_function": "swap_to_1_shadow",
        "swap_to_1_fee": 5.0
    }
}
